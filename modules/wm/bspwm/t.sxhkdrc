# termite
super + w
	{{ terminal.run }}

super + Return
  {{ terminal.run }} --class "floating"

# firefox
super + q
  {{ web.run }}

# spotify
super + m
	spotify

# mpv
super + v
	mpv "$(xclip -selection clipboard -out)"

# launchers
super + r
  {{ launcher.run }}

# wifi
super + n
  {{ system.network.menu }}

{super + BackSpace,@XF86PowerOff}
  {{ system.state.menu }}

XF86Display
  {{ desktop.menu }}

# volume and music
{XF86AudioRaiseVolume,XF86AudioLowerVolume}
  pactl set-sink-volume @DEFAULT_SINK@ {+,-}1%

XF86AudioMute
  pactl set-sink-mute @DEFAULT_SINK@ toggle

XF86Audio{Play,Prev,Next}
  playerctl {play-pause,previous,next}

# make sxhkd reload its configuration files:
super + shift + r
  pkill -USR1 -x sxhkd


# close and kill
super + {_,shift + }c
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + Tab
	bspc desktop -l next

# swap the current node and the biggest node
super + g
	bspc node -s biggest.local

super + {_,shift + }semicolon
  bspc node @/ -{F vertical,R 90}


# set the window state
super + {a,s,d,f}
	bspc node -t '~{tiled,pseudo_tiled,floating,fullscreen}'

# focus/move the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# cycle through windows
super + {_,shift + }space
  bspc node -f {next,prev}.local

# focus the node for the given path jump
super + {_,shift + }y
  bspc node -f @{parent,first}

# focus or send to the given desktop
super + {_,shift + }{1-5}
  bspc {desktop -f,node -d} '^{1-5}'


# preselect the direction
super + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o '0.{1-9}'

# cancel the preselection for the focused node
super + backslash
	bspc node -p cancel


# expand a window by moving one of its side outward
super + u: {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + u: shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
